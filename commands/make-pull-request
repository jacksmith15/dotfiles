#!/usr/bin/env bash

ticket_from_branch () {
    current_branch=$(git rev-parse --abbrev-ref HEAD)
    ticket_code=$(echo $current_branch | sed -rn 's@^[a-zA-Z0-9_-]+\/([a-zA-Z0-9-]+)\/[a-zA-Z0-9_-]+$@\1@p')
    echo "$ticket_code"
}

jira_url () {
    ticket=$(ticket_from_branch)
    if [[ "$ticket" -eq "" ]]; then
        echo "$ticket"
    else
        echo "[JIRA Ticket](https://jira.extge.co.uk/browse/$ticket)"
    fi
}

exit_msg () {
    echo "$2"
    exit "$1"
}

checks=$(sed -e '/# Check list/,/\$/!d' .github/pull_request_template.md)

# Default to master target
target_branch=master

while [[ "$#" > 0 ]]; do
    case $1 in
        -t|--target-branch) target_branch="$2"; shift;;
        -n|--dry-run) dry_run=true;;
        -nf|--no-fetch) no_fetch=true;;
        -h|--help) show_help=true;;
        *) [ -z "$title" ] && title="$1" || exit_msg 1 "Invalid argument $1"
    esac
    shift
done

if [[ -n ${show_help+x} ]]; then
    echo "Tool for opening Pull Requests."
    echo "Run as:\n $0 [options] TITLE\n\nPossible options are:"
    echo "  -h, --help: Displays this help."
    echo "  -t, --target-branch: Branch to target for pull request (default: master)."
    echo "  -n, --dry-run: Output to stdout instead of calling Github."
    echo "  -nf, --no-fetch: Don't fetech the target branch before generating from diff."
    exit 0
fi

if [ -z "$title" ]; then
    exit_msg 1 "Missing PR Title"
fi

# Fetch the target branch.
if [ -z "$no_fetch" ]; then
    git fetch origin "$target_branch"
fi


# JIRA Ticket URL (if any).
jira_url=$(jira_url)


# Construct the PR message.
read -d '' changes << EOF

# What has changed

$(git diff $target_branch CHANGELOG.md | grep '^+\*' | sed 's/^+//g')
EOF

read -d '' pr_message << EOF
$title
$changes

$jira_url

$checks
EOF

# Open the Pull Request (or print if dry running.)
if [ -z "$dry_run" ]; then
    hub pull-request -b "$target_branch" -m "$pr_message"
else
    echo "hub pull-request -b \"$target_branch\" -m \"$pr_message\""
fi
